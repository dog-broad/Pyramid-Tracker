name: Reusable Actions for Pyramid-Tracker

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        default: '3.10'
        required: false
        type: string
    secrets:
      DB_MONGODB_URI:
        required: true
      DB_MONGODB_USERNAME:
        required: true
      DB_MONGODB_PASSWORD:
        required: true
      API_CODEFORCES_KEY:
        required: true
      API_CODEFORCES_SECRET:
        required: true
      API_CODECHEF_CLIENT_ID:
        required: true
      API_CODECHEF_CLIENT_SECRET:
        required: true
      API_GFG_USERNAME:
        required: true
      API_GFG_PASSWORD:
        required: true

jobs:
  setup-python:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-dependencies.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'
          
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
  create-env-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Create .env file
        run: |
          cp .env.example .env
          # Dynamically add all secrets to the .env file
          for secret_name in $(echo '${{ toJSON(secrets) }}' | jq -r 'keys[]'); do
            # Skip GitHub default secrets
            if [[ $secret_name != GITHUB_* && $secret_name != ACTIONS_* ]]; then
              # Get the secret value
              secret_value=$(echo '${{ toJSON(secrets) }}' | jq -r --arg key "$secret_name" '.[$key]')
              # Find matching line in .env file and replace it, or append if not found
              if grep -q "^${secret_name}=" .env; then
                sed -i "s|^${secret_name}=.*|${secret_name}=${secret_value}|g" .env
              else
                echo "${secret_name}=${secret_value}" >> .env
              fi
            fi
          done