name: Weekly Data Pipeline

on:
  schedule:
    # Run at 00:00 on Sunday
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      college:
        description: 'College to process'
        required: true
        default: 'CMRIT'
        type: choice
        options:
          - CMRIT
      batch:
        description: 'Batch to process'
        required: true
        default: '_2025'
        type: choice
        options:
          - _2025
          - _2026
          - _2027
      platforms:
        description: 'Platforms to scrape'
        required: true
        default: 'ALL'
        type: choice
        options:
          - ALL
          - 'CODECHEF CODEFORCES'
          - 'CODECHEF LEETCODE'
          - 'CODEFORCES LEETCODE'
          - 'CODECHEF CODEFORCES LEETCODE'
          - 'HACKERRANK GEEKSFORGEEKS'
          - 'CODECHEF CODEFORCES HACKERRANK GEEKSFORGEEKS LEETCODE'
      debug:
        description: 'Enable debug mode with verbose logging'
        required: false
        default: 'false'
        type: boolean

jobs:
  setup:
    uses: ./.github/workflows/reusable-actions.yml
    secrets: inherit
    
  run-pipeline:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Create .env file
        run: |
          cp .env.example .env
          # Dynamically add all secrets to the .env file
          for secret_name in $(echo '${{ toJSON(secrets) }}' | jq -r 'keys[]'); do
            # Skip GitHub default secrets
            if [[ $secret_name != GITHUB_* && $secret_name != ACTIONS_* ]]; then
              # Get the secret value
              secret_value=$(echo '${{ toJSON(secrets) }}' | jq -r --arg key "$secret_name" '.[$key]')
              # Find matching line in .env file and replace it, or append if not found
              if grep -q "^${secret_name}=" .env; then
                echo "Updating ${secret_name} in .env"
                sed -i "s|^${secret_name}=.*|${secret_name}=${secret_value}|g" .env
              else
                echo "Adding ${secret_name} to .env"
                echo "${secret_name}=${secret_value}" >> .env
              fi
            fi
          done
          
      - name: Run full pipeline
        run: |
          platforms="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.platforms || 'ALL' }}"
          debug_flag="${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.debug == 'true' && '--debug' || '') || '' }}"
          
          # Create output directory
          mkdir -p pipeline_output
          
          # Run the pipeline
          python main.py $debug_flag run-pipeline \
            --college ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.college || 'CMRIT' }} \
            --batch ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.batch || '_2025' }} \
            --platforms $platforms \
            --output pipeline_output/leaderboard_${{ github.event_name == 'workflow_dispatch' && github.event.inputs.college || 'CMRIT' }}_${{ github.event_name == 'workflow_dispatch' && github.event.inputs.batch || '_2025' }}.xlsx \
            --charts

      - name: Log complete file/folder structure of complete repository with max depth
        run: |
          tree -L 10 .

      - name: Log complete file/folder structure of pipeline_output directory with max depth
        run: |
          tree -L 10 pipeline_output
            
      - name: Upload leaderboard
        uses: actions/upload-artifact@v4
        with:
          name: leaderboard-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.college || 'CMRIT' }}-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.batch || '_2025' }}-${{ github.run_id }}
          path: pipeline_output/leaderboard_${{ github.event_name == 'workflow_dispatch' && github.event.inputs.college || 'CMRIT' }}_${{ github.event_name == 'workflow_dispatch' && github.event.inputs.batch || '_2025' }}.xlsx
          retention-days: 30
          
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.college || 'CMRIT' }}-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.batch || '_2025' }}-${{ github.run_id }}
          path: logfile.log
          retention-days: 7